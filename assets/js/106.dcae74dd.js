(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{577:function(_,v,t){"use strict";t.r(v);var i=t(15),l=Object(i.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("速记突击")]),_._v(" "),t("h2",{attrs:{id:"html、http、web-综合问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html、http、web-综合问题"}},[_._v("#")]),_._v(" HTML、HTTP、WEB 综合问题")]),_._v(" "),t("h3",{attrs:{id:"前端需要注意哪些-seo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端需要注意哪些-seo"}},[_._v("#")]),_._v(" 前端需要注意哪些 SEO")]),_._v(" "),t("ul",[t("li",[_._v("合理的 title、description、keywords：搜索对这三项的权重逐个减小，title 值强调重点即可，重要关键词出现不要超过两次，而且要靠前，不同页面 title 要有所不同；description 把页面内容高度概括，长度合适，不可过分堆砌关键词，不同页面 description 有所不同；keywords 列举出重要关键词即可")]),_._v(" "),t("li",[_._v("语义化的 HTML 代码，符合 W3C 规范：语义化代码让搜索引擎容易理解网页")]),_._v(" "),t("li",[_._v("重要内容 html 代码放在最前：搜索引擎的抓取 HTML 顺序是从上到下，有的时候搜索引擎对抓取长度有限制，保证重要内容一定会被抓取")]),_._v(" "),t("li",[_._v("重要内容不要使用 js 输出：爬虫不会执行 js 获取内容")]),_._v(" "),t("li",[_._v("少用 iframe：搜索引擎不会抓取 iframe 中的内容")]),_._v(" "),t("li",[_._v("非装饰性图片必须加 alt")]),_._v(" "),t("li",[_._v("提高网站速度：网站速度是搜索引擎排序的一个重要指标")])]),_._v(" "),t("h3",{attrs:{id:"img-的-title-和-alt-有什么-qubie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#img-的-title-和-alt-有什么-qubie"}},[_._v("#")]),_._v(" img 的 title 和 alt 有什么 qubie")]),_._v(" "),t("ul",[t("li",[_._v("通常当鼠标滑动到元素上的时候显示")]),_._v(" "),t("li",[_._v("alt 是 img 特有的属性，是图片显示内容的等价描述，用于图片无法加载时显示。读屏器阅读图片。可提高图片高可访问性，除了纯装饰性图片外都必须设置有意义的值，搜索引擎会重点分析")])]),_._v(" "),t("h3",{attrs:{id:"http-的集中请求方法用途"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-的集中请求方法用途"}},[_._v("#")]),_._v(" HTTP 的集中请求方法用途")]),_._v(" "),t("ul",[t("li",[_._v("GET 方法")])]),_._v(" "),t("p",[_._v("发送一个请求来取得服务器的某一资源")]),_._v(" "),t("ul",[t("li",[_._v("POST 方法")])]),_._v(" "),t("p",[_._v("想 URL 指定的资源提交数据或附加新的数据")]),_._v(" "),t("ul",[t("li",[_._v("PUT 方法")])]),_._v(" "),t("p",[_._v("跟 POST 方法很像，也是想服务器提交数据。但是，他们之间有不同。PUT 指定了资源在服务器上的位置，而 post 没有")]),_._v(" "),t("ul",[t("li",[_._v("HEAD 方法")])]),_._v(" "),t("p",[_._v("只请求页面的首部")]),_._v(" "),t("ul",[t("li",[_._v("DELETE 方法")])]),_._v(" "),t("p",[_._v("删除服务器上的某资源")]),_._v(" "),t("ul",[t("li",[_._v("OPTIONS 方法")])]),_._v(" "),t("p",[_._v('它用于获取当前 URL 所支持的方法，如果请求成功，会有一个 ALLOW 的头部包含类似"GET,POST"这样的信息')]),_._v(" "),t("ul",[t("li",[_._v("TRACE 方法")])]),_._v(" "),t("p",[_._v("该方法用于激发一个远程的，应用层的请求消息回路")]),_._v(" "),t("ul",[t("li",[_._v("CONNECT 方法")])]),_._v(" "),t("p",[_._v("把请求连接转换到透明的 TCP/IP 通道")]),_._v(" "),t("h3",{attrs:{id:"从浏览器地址栏输入-url-到显示页面的步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从浏览器地址栏输入-url-到显示页面的步骤"}},[_._v("#")]),_._v(" 从浏览器地址栏输入 URL 到显示页面的步骤")]),_._v(" "),t("h4",{attrs:{id:"简略回答"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简略回答"}},[_._v("#")]),_._v(" 简略回答")]),_._v(" "),t("ul",[t("li",[_._v("浏览器根据请求的 URL 交给 DNS 域名解析，找到真实的 IP，向服务器发送请求")]),_._v(" "),t("li",[_._v("服务器交给后台处理完成后返回数据，浏览器接受文件(HTML、JS、CSS、图像等)")]),_._v(" "),t("li",[_._v("浏览器对加载到的资源进行语法解析(HTML、JS、CSS、图像等)，建立相应的内部数据结构(如 HTML 的 DOM)")]),_._v(" "),t("li",[_._v("载入解析到的资源文件，渲染页面，完成")])]),_._v(" "),t("h4",{attrs:{id:"详细回答"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细回答"}},[_._v("#")]),_._v(" 详细回答")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("在浏览器地址栏输入 URL")])]),_._v(" "),t("li",[t("p",[_._v("浏览器查看缓存，如果请求资源在缓存中并且新鲜，跳转到转码步骤")]),_._v(" "),t("ol",[t("li",[_._v("如果资源为缓存，发起新请求")]),_._v(" "),t("li",[_._v("如果已缓存，检查是否新鲜，新鲜则直接提供给客户端，否则与服务器进行验证")]),_._v(" "),t("li",[_._v("检查是否可用通常有两个 HTTP 头进行控制 Expires 和 Cache-Control")])]),_._v(" "),t("p",[_._v("HTTP1.0 提供 Expires，值为一个绝对时间表示缓存日期")]),_._v(" "),t("p",[_._v("HTTP1.1 增加了 Cache-Control：max-age=,值为以秒为单位的最大新鲜时间")])]),_._v(" "),t("li",[t("p",[_._v("浏览器解析 URL 获取协议，主机，端口，path")])]),_._v(" "),t("li",[t("p",[_._v("浏览器组装一个 HTTP 请求报文")])]),_._v(" "),t("li",[t("p",[_._v("浏览器获取主机 ip 地址，过程如下：")]),_._v(" "),t("ol",[t("li",[_._v("浏览器缓存")]),_._v(" "),t("li",[_._v("本机缓存")]),_._v(" "),t("li",[_._v("hosts 文件")]),_._v(" "),t("li",[_._v("路由器缓存")]),_._v(" "),t("li",[_._v("ISP DNS 缓存")]),_._v(" "),t("li",[_._v("DNS 递归查询(可能勋在负载均衡导致每次 IP 不一样)")])])]),_._v(" "),t("li",[t("p",[_._v("打开一个 socket 与目标 ip 地址，端口建立 TCP 链接，三次握手：")]),_._v(" "),t("ol",[t("li",[_._v("客户端发送一个 TCP 的 SYN=1，Seq=X 的包到服务器端口")]),_._v(" "),t("li",[_._v("服务器返回 SYN=1，ACK=X+1，Seq=Y 的响应包")]),_._v(" "),t("li",[_._v("客户端发送 ACK=Y+1，Seq=Z")])])]),_._v(" "),t("li",[t("p",[_._v("TCP 链接建立以后发送 HTTP 请求")])]),_._v(" "),t("li",[t("p",[_._v("服务器接受请求并解析，将请求转发到服务程序，如虚拟主机使用 HTTP Host 头部判断请求的服务程序")])]),_._v(" "),t("li",[t("p",[_._v("服务器检查 HTTP 请求头是否包含缓存验证信息，如果验证缓存信息新鲜，返回 304 等对应状态码")])]),_._v(" "),t("li",[t("p",[_._v("处理程序读取完整请求并准备 HTTP 响应，可能需要查询数据库等操作")])]),_._v(" "),t("li",[t("p",[_._v("服务器将响应报文通过 tcp 链接发送浏览器")])]),_._v(" "),t("li",[t("p",[_._v("浏览器接收 HTTP 响应，然后根据情况选择关闭 TCP 连接或者保留重用，关闭 TCP 连接的四次握手如下")]),_._v(" "),t("ol",[t("li",[_._v("主动方发送 Fin=1,ACK=Z,Seq=X 报文")]),_._v(" "),t("li",[_._v("被动方发送 ACK=X+1，Seq=Z 报文")]),_._v(" "),t("li",[_._v("被动方发送 Fin=1，ACK=X，Seq=Y 报文")]),_._v(" "),t("li",[_._v("主动方发送 ACK=Y，Seq=X 报文")])])]),_._v(" "),t("li",[t("p",[_._v("浏览器检查响应状态码：是否为 1XX，3XX，4XX，5XX，这些情况处理与 2XX 不同")])]),_._v(" "),t("li",[t("p",[_._v("如果资源可缓存，进行缓存")])]),_._v(" "),t("li",[t("p",[_._v("对响应进行解码（例如 gzip 压缩）")])]),_._v(" "),t("li",[t("p",[_._v("根据资源类型决定如何处理（假设资源类型定位 html 文档）")])]),_._v(" "),t("li",[t("p",[_._v("解析 HTML 文档，构建 DOM 树，下载资源，构建 CSSDPOM 树，执行 js 脚本，这些操作没有严格的顺序")])]),_._v(" "),t("li",[t("p",[_._v("构建 dom 树")]),_._v(" "),t("ol",[t("li",[_._v("Tokenizing：根据 HTML 规范将字符流解析为标记")]),_._v(" "),t("li",[_._v("Lexing: 词法分析将标记转换为对象并定义属性和规则")]),_._v(" "),t("li",[_._v("DOM construction: 根据 HTML 标记关系并将对象组成 DOM 树")])])]),_._v(" "),t("li",[t("p",[_._v("解析过程中遇到图片、样式表、JS 文件，启动下载")])]),_._v(" "),t("li",[t("p",[_._v("构建 CSSDOM 树：")]),_._v(" "),t("ol",[t("li",[_._v("Tokenizing: 字符流转换成标记流")]),_._v(" "),t("li",[_._v("Node：根据标记创建节点")]),_._v(" "),t("li",[_._v("CSSDOM： 节点创建 CSSOM 树")])])]),_._v(" "),t("li",[t("p",[_._v("根据 DOM 树和 CSSOM 树构建渲染树")]),_._v(" "),t("ol",[t("li",[_._v("从 DOM 树的根节点遍历所有可见节点，不可见节点包括 （1）script、meta 这样本身不可见的标签 （2）被 css 隐藏的节点，如 display：none")]),_._v(" "),t("li",[_._v("对每一个可见节点，找到恰当的 CSSOM 规则并应用")]),_._v(" "),t("li",[_._v("发布可视节点的内容和计算样式")])])]),_._v(" "),t("li",[t("p",[_._v("js 解析：")]),_._v(" "),t("ol",[t("li",[_._v("浏览器创建 Document 对象并解析 HTML，将解析到的元素和文本节点添加到文档中，此时 document.readystate 为 loading")]),_._v(" "),t("li",[_._v("HTML 解析器遇到没有 async 和 defer 的 script 时，将他们添加到文档中，然后执行行内或者外部脚本。这些脚本会同步执行，并且在脚本下载和执行时解析器会暂停。这样就可以用 document.write()把文本插入到输入流中。同步脚本经常简单定义函数和注册事件处理程序，他们可以遍历和操作 script 和他们之前的文档内容")]),_._v(" "),t("li",[_._v("当解析器遇到设置了 async 属性的 script 时，开始下载脚本并继续解析文档。脚本会在他下载完成后尽快执行，但是解析器不会停下来等他下载。一步脚本禁止使用 document.write()，他们可以访问自己 script 和之前的文档元素")]),_._v(" "),t("li",[_._v("当文档完成解析，document.readState 变成 interactive")]),_._v(" "),t("li",[_._v("所有 defer 脚本会按照在文档中出现的顺序执行，延迟脚本能访问完整文档树，禁止使用 document.write()")]),_._v(" "),t("li",[_._v("浏览器在 Document 对象上出发 DOMContentLoaded 事件")]),_._v(" "),t("li",[_._v("此时文档完全解析完成，浏览器可能还在等待如图片等内容加载，等这些内容完成载入并且所有异步脚本完成载入和执行，document.readState 变为 complete,window 出发 load 事件")])])]),_._v(" "),t("li",[t("p",[_._v("显示页面（HTML 解析过程中或逐渐显示页面）")])])]),_._v(" "),t("h4",{attrs:{id:"详细简版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细简版"}},[_._v("#")]),_._v(" 详细简版")]),_._v(" "),t("ol",[t("li",[_._v("从浏览器接受 url 到开启网络请求线程（这一部分可以展开浏览器的机制以及进程与线程之间的关系）")]),_._v(" "),t("li",[_._v("开启网络线程到发出一个完成的 HTTP 请求(这一部分涉及到 dns 查询，tcp/ip 请求，吴增因特网协议栈等知识)")]),_._v(" "),t("li",[_._v("从服务器接收到请求到对应后台接收到请求(这一部分可能涉及到负载均衡，安全拦截以及后台内部的处理等等)")]),_._v(" "),t("li",[_._v("后台和前台的 HTTP 交互(这一部分包括 HTTP 头部、响应码、报文结构、cookie 等知识，可以提下静态资源的 cookie 优化，以及编码解码，如 gzip 压缩等)")]),_._v(" "),t("li",[_._v("单独拎出来的缓存问题，HTTP 的缓存(这部分包括 http 缓存头部，Etag，Catch-control 等)")]),_._v(" "),t("li",[_._v("浏览器接收到 HTTP 数据包后的解析流程(解析 html-词法分析然后解析成 dom 树、解析 css 生成 css 规则树、合并成 render 树，然后 layout、painting 渲染、复合涂层的合成、GPU 绘制、外联资源的处理、loaded 和 COMContentLoaded 等)")]),_._v(" "),t("li",[_._v("CSS 的可视化格式模型(元素的渲染规则，如包含块，控制狂，BFC，IFC 等概念)")]),_._v(" "),t("li",[_._v("JS 引擎解析过程(JS 的解释阶段，预处理阶段，执行阶段生成执行上下文，VO，作用域链、垃圾回收机制等等)")]),_._v(" "),t("li",[_._v("其他(可以扩展下不同的知识模块，如跨域，web 安全，hybrid 模式等等内容)")])]),_._v(" "),t("h3",{attrs:{id:"如何进行网站性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何进行网站性能优化"}},[_._v("#")]),_._v(" 如何进行网站性能优化")]),_._v(" "),t("h4",{attrs:{id:"content-方面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#content-方面"}},[_._v("#")]),_._v(" content 方面")]),_._v(" "),t("ul",[t("li",[_._v("减少 HTTP 请求：合并文件、css 图片精灵、inline Image")]),_._v(" "),t("li",[_._v("减少 DNS 查询：DNS 缓存、将资源分布到恰当数量的主机名")]),_._v(" "),t("li",[_._v("减少 DOM 元素数量")])]),_._v(" "),t("h4",{attrs:{id:"server-方面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-方面"}},[_._v("#")]),_._v(" Server 方面")]),_._v(" "),t("ul",[t("li",[_._v("使用 CDN")]),_._v(" "),t("li",[_._v("配置 Etag")]),_._v(" "),t("li",[_._v("对组件使用 Gzip 压缩")])]),_._v(" "),t("h4",{attrs:{id:"cookie-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-方法"}},[_._v("#")]),_._v(" Cookie 方法")]),_._v(" "),t("ul",[t("li",[_._v("减少 cookie 大小")])]),_._v(" "),t("h4",{attrs:{id:"css-方面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-方面"}},[_._v("#")]),_._v(" css 方面")]),_._v(" "),t("ul",[t("li",[_._v("将样式表放到页面顶部")]),_._v(" "),t("li",[_._v("不适用 css 表达式")]),_._v(" "),t("li",[_._v("使用 link 不适用 import")])]),_._v(" "),t("h4",{attrs:{id:"js-方面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-方面"}},[_._v("#")]),_._v(" js 方面")]),_._v(" "),t("ul",[t("li",[_._v("将脚本放到页面底部")]),_._v(" "),t("li",[_._v("将 js 和 css 从外部引入")]),_._v(" "),t("li",[_._v("压缩 js 和 css")]),_._v(" "),t("li",[_._v("删除不需要的脚本")]),_._v(" "),t("li",[_._v("减少 DOM 访问")])]),_._v(" "),t("h4",{attrs:{id:"图片方面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图片方面"}},[_._v("#")]),_._v(" 图片方面")]),_._v(" "),t("ul",[t("li",[_._v("优化图片： 根据实际颜色需要选择色深、压缩")]),_._v(" "),t("li",[_._v("优化 css 精灵")]),_._v(" "),t("li",[_._v("不要再 html 中拉伸图片")])]),_._v(" "),t("h3",{attrs:{id:"http-状态码以及含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码以及含义"}},[_._v("#")]),_._v(" HTTP 状态码以及含义")]),_._v(" "),t("h4",{attrs:{id:"_1xx-信息状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1xx-信息状态码"}},[_._v("#")]),_._v(" 1XX：信息状态码")]),_._v(" "),t("ul",[t("li",[_._v("100 continue 继续，一般在发送 post 请求时，已发送了 http header 之后服务端将返回此信息，表示确认，之后发送具体参数信息")])]),_._v(" "),t("h4",{attrs:{id:"_2xx-成功状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2xx-成功状态码"}},[_._v("#")]),_._v(" 2XX：成功状态码")]),_._v(" "),t("ul",[t("li",[_._v("200 OK 正常返回信息")]),_._v(" "),t("li",[_._v("201 Created 请求成功并且服务器创建了新的资源")]),_._v(" "),t("li",[_._v("202 Accepted 服务器已接收请求，但尚未处理")])]),_._v(" "),t("h4",{attrs:{id:"_3xx-重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[_._v("#")]),_._v(" 3XX： 重定向")]),_._v(" "),t("ul",[t("li",[_._v("301 Moved Permanently 请求的网页已永久移动到新位置")]),_._v(" "),t("li",[_._v("302 Found 临时重定向")]),_._v(" "),t("li",[_._v("303 See Other 临时重定向，且总是使用 GET 请求新的 URI")]),_._v(" "),t("li",[_._v("304 Not Modified 自从上次请求后，请求的网页未修改过")])]),_._v(" "),t("h4",{attrs:{id:"_4xx-客户端错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[_._v("#")]),_._v(" 4XX：客户端错误")]),_._v(" "),t("ul",[t("li",[_._v("400 Bad Request 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求")]),_._v(" "),t("li",[_._v("401 Unauthorized 请求未授权")]),_._v(" "),t("li",[_._v("403 Forbidden 禁止访问")]),_._v(" "),t("li",[_._v("404 Not Found 找不到如何与 URI 相匹配的资源")])]),_._v(" "),t("h4",{attrs:{id:"_5xx-服务器错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[_._v("#")]),_._v(" 5XX：服务器错误")]),_._v(" "),t("ul",[t("li",[_._v("500 Internal Server Error 最常见的服务器端错误")]),_._v(" "),t("li",[_._v("503 Service Unavailabel 服务器端暂时无法处理请求（可能是过载或维护）")])]),_._v(" "),t("h3",{attrs:{id:"语义化的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语义化的理解"}},[_._v("#")]),_._v(" 语义化的理解")]),_._v(" "),t("ul",[t("li",[_._v("用正确的标签做正确的事情")]),_._v(" "),t("li",[_._v("HTML 语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析")]),_._v(" "),t("li",[_._v("在没有样式 CSS 情况下也以一种文档格式显示，并且是容易阅读的")]),_._v(" "),t("li",[_._v("搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO")]),_._v(" "),t("li",[_._v("使阅读源代码的人对网站更容易将网站分块，便于理解维护")])]),_._v(" "),t("h3",{attrs:{id:"浏览器内核"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[_._v("#")]),_._v(" 浏览器内核")]),_._v(" "),t("ul",[t("li",[_._v("主要分成两个部分：渲染引擎(layout engineer 或 Rendering Engine)和 js 引擎")]),_._v(" "),t("li",[_._v("渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 css 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其他需要编辑、显式网略内容的应用程序都需要内核")]),_._v(" "),t("li",[_._v("js 引擎规则：解析和执行 js 来实现网页的动态效果")]),_._v(" "),t("li",[_._v("最开始渲染引擎和 js 引擎并没有区分的很明显，后来 js 引擎越来越独立，内核就倾向于只指渲染引擎")])])])}),[],!1,null,null,null);v.default=l.exports}}]);